#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        key_key_timed: key_key_timed {
            compatible = "zmk,behavior-hold-tap";
            label = "KEY_KEY_TIMED";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        key_layer_timed: key_layer_timed {
            compatible = "zmk,behavior-hold-tap";
            label = "KEY_LAYER_TIMED";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };
    };

    macros {
        ttyx: ttyx {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LS(F1))>;
            label = "TTYX";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&trans        &trans  &trans  &trans  &trans  &trans  &trans                                                             &kp C_VOLUME_UP    &trans  &trans                     &trans      &trans         &trans    &tog 4
&kp TAB       &kp Q   &kp W   &kp F   &kp P   &kp B   &trans                                                             &kp C_VOLUME_DOWN  &kp J   &kp L                      &kp U       &kp Y          &kp SEMI  &trans
&kp ESCAPE    &kp A   &kp R   &kp S   &kp T   &kp G   &none          &kp LCTRL  &trans    &trans  &kp LEFT_SHIFT         &kp K_MUTE         &kp M   &key_key_timed LEFT_GUI N  &kp E       &kp I          &kp O     &trans
&kp LEFT_ALT  &kp X   &kp C   &kp D   &kp V   &kp Z                             &trans    &trans                                            &kp K   &kp H                      &kp COMMA   &kp DOT        &kp FSLH  &kp LEFT_ALT
&trans        &trans  &trans  &trans  &trans                  &mo 3  &kp SPACE  &trans    &trans  &kp RETURN      &mo 2                             &mo 1                      &kp DELETE  &kp BACKSPACE  &trans    &trans
            >;
        };

        system {
            bindings = <
&trans  &trans           &trans          &trans          &trans          &trans  &trans                                                              &trans  &trans  &trans        &trans        &trans        &trans  &trans
&trans  &kp LA(LC(F12))  &kp LA(LC(F7))  &kp LA(LC(F8))  &kp LC(LA(F9))  &trans  &trans                                                              &trans  &trans  &trans        &trans        &trans        &trans  &trans
&trans  &kp LA(LC(F11))  &kp LA(LC(F4))  &kp LA(LC(F5))  &kp LA(LC(F6))  &trans  &trans          &bootloader  &trans    &trans  &bootloader          &trans  &trans  &bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans  &trans
&trans  &kp LA(LC(F10))  &kp LC(LA(F1))  &kp LC(LA(F2))  &kp LC(LA(F3))  &trans                               &trans    &trans                               &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans
&trans  &trans           &trans          &trans          &trans                          &trans  &trans       &trans    &trans  &bt BT_CLR   &trans                  &trans        &trans        &trans        &trans  &trans
            >;
        };

        symbol_layer {
            bindings = <
&trans  &trans             &trans           &trans        &trans     &trans     &trans                                                    &trans  &trans  &trans                &trans                 &trans          &trans            &trans
&trans  &kp BACKSLASH      &kp AMPERSAND    &kp ASTERISK  &kp SQT    &kp TILDE  &trans                                                    &trans  &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDERSCORE  &kp EQUAL         &trans
&trans  &kp DOUBLE_QUOTES  &kp DOLLAR       &kp PERCENT   &kp CARET  &kp PIPE   &trans          &trans  &trans    &trans  &trans          &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp MINUS       &kp PLUS          &trans
&trans  &trans             &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &kp GRAVE                          &trans    &trans                          &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LESS_THAN   &kp GREATER_THAN  &trans
&trans  &trans             &trans           &trans        &trans                        &trans  &trans  &trans    &trans  &trans  &trans                  &trans                &trans                 &trans          &trans            &trans
            >;
        };

        num {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                    &trans  &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans  &trans                                                    &trans  &trans    &trans    &trans        &trans     &trans  &trans
&trans  &kp N0  &kp N4  &kp N5  &kp N6  &trans  &trans          &trans  &trans    &trans  &trans          &trans  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans                          &trans    &trans                          &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans    &trans  &trans  &trans                    &trans    &trans        &trans     &trans  &trans
            >;
        };

        gaming_yeah {
            bindings = <
&trans   &trans  &trans  &trans  &trans  &trans  &trans                                                         &trans  &trans  &trans    &trans        &trans     &trans  &trans
&kp TAB  &kp Q   &kp F   &kp E   &kp R   &kp T   &trans                                                         &trans  &trans  &trans    &trans        &trans     &trans  &trans
&kp ESC  &kp C   &kp A   &kp W   &kp D   &kp G   &trans         &kp LSHFT  &kp LCTRL    &trans  &trans          &trans  &trans  &kp LEFT  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans   &kp Z   &kp X   &kp S   &kp V   &kp B                             &mo 3        &trans                          &trans  &trans    &kp DOWN      &trans     &trans  &trans
&trans   &kp Y   &kp U   &kp I   &kp O                   &mo 2  &kp SPACE  &trans       &trans  &trans  &trans                  &trans    &trans        &trans     &trans  &trans
            >;
        };
    };
};
